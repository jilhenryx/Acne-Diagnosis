{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Jil Henry\\\\Documents\\\\Programming\\\\React\\\\acne_diagnosis\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jil Henry\\\\Documents\\\\Programming\\\\React\\\\acne_diagnosis\\\\client\\\\src\\\\components\\\\Login.js\";\nimport React, { useRef, useState } from 'react';\nimport { Container, TextField, Typography } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styles from '../resources/FormStyles.module.css';\nimport { validateForm } from '../utility/FormValidation';\nimport Constants from \"../utility/Constants\";\nimport { makeRequest } from '../utility/ServerUtil';\n\nfunction Login() {\n  //References to HTML Elements\n  var emailRef = useRef();\n  var passwordRef = useRef();\n  var navigate = useNavigate(); //Use States\n\n  var _useState = useState(Constants.LOGIN_FORM_ERRORS),\n      _useState2 = _slicedToArray(_useState, 2),\n      errors = _useState2[0],\n      setErrors = _useState2[1];\n\n  var _useState3 = useState(Constants.LOGIN_FORM_HELPER_TEXTS),\n      _useState4 = _slicedToArray(_useState3, 2),\n      helperTexts = _useState4[0],\n      setHelperTexts = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1]; //Function to handle for submission\n\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    setLoading(true);\n    setErrors(Constants.LOGIN_FORM_ERRORS);\n    setHelperTexts(Constants.LOGIN_FORM_HELPER_TEXTS);\n    var formData = {\n      email: emailRef.current.value,\n      password: passwordRef.current.value\n    };\n    var validationStatus = validateForm(formData, Constants.FORM_TYPE.login);\n    setLoading(false);\n    setErrors(validationStatus.errors);\n    setHelperTexts(validationStatus.helperTexts);\n\n    if (validationStatus.canSubmit) {\n      setLoading(true);\n      makeRequest(Constants.LOGIN_API, formData, Constants.SERVER_CALL_TYPE.post).then(function (response) {\n        setLoading(false);\n\n        if (!response || response.data.statusCode === Constants.STATUS_CODE_ERROR) {\n          console.log();\n          alert(Constants.DEFAULT_ERROR_MESSAGE);\n          return;\n        }\n\n        var shouldLogin = response.data.loginResponse.shouldLogin;\n        var emailErrorMsg = response.data.loginResponse.emailErrorMsg;\n        var passwordErrorMsg = response.data.loginResponse.passwordErrorMsg;\n        console.log(\"Login Response: \", response.data);\n\n        if (shouldLogin) {\n          navigate(Constants.MAIN_PAGE);\n        } else {\n          console.log(\"Email Error: \", emailErrorMsg, \"Password Error\", passwordErrorMsg);\n          setHelperTexts({\n            email: emailErrorMsg,\n            password: passwordErrorMsg\n          });\n          console.log(!passwordErrorMsg.isEmpty() ? true : false);\n          setErrors({\n            email: !emailErrorMsg.isEmpty() ? true : false,\n            password: !passwordErrorMsg.isEmpty() ? true : false\n          });\n        }\n      }).catch(function (_) {\n        setLoading(false);\n        alert(Constants.DEFAULT_ERROR_MESSAGE);\n      });\n    }\n  }; //Login Module\n\n\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"xs\",\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: styles.headertext,\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Welcome\"), /*#__PURE__*/React.createElement(Typography, {\n    className: styles.smalltext,\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Please enter your login email and password\")), /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    inputRef: emailRef,\n    id: \"email\",\n    type: \"email\",\n    variant: \"outlined\",\n    placeholder: \"user@example.com\",\n    label: \"Email\",\n    error: errors.email,\n    helperText: helperTexts.email,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    inputRef: passwordRef,\n    id: \"password\",\n    type: \"password\",\n    variant: \"outlined\",\n    label: \"Password\",\n    error: errors.password,\n    helperText: helperTexts.password,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.smalltext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Forgot password?\"), /*#__PURE__*/React.createElement(LoadingButton, {\n    className: styles.submitButton,\n    loading: loading,\n    variant: \"outlined\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    className: styles.smalltext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"Don't have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 101\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 122\n    }\n  }, \"Sign Up\")))));\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Jil Henry/Documents/Programming/React/acne_diagnosis/client/src/components/Login.js"],"names":["React","useRef","useState","Container","TextField","Typography","LoadingButton","Link","useNavigate","styles","validateForm","Constants","makeRequest","Login","emailRef","passwordRef","navigate","LOGIN_FORM_ERRORS","errors","setErrors","LOGIN_FORM_HELPER_TEXTS","helperTexts","setHelperTexts","loading","setLoading","handleSubmit","event","preventDefault","formData","email","current","value","password","validationStatus","FORM_TYPE","login","canSubmit","LOGIN_API","SERVER_CALL_TYPE","post","then","response","data","statusCode","STATUS_CODE_ERROR","console","log","alert","DEFAULT_ERROR_MESSAGE","shouldLogin","loginResponse","emailErrorMsg","passwordErrorMsg","MAIN_PAGE","isEmpty","catch","_","container","headertext","smalltext","submitButton"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport { Container, TextField, Typography } from '@mui/material';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport styles from '../resources/FormStyles.module.css';\r\nimport { validateForm } from '../utility/FormValidation';\r\nimport Constants from \"../utility/Constants\"\r\nimport { makeRequest } from '../utility/ServerUtil';\r\n\r\nfunction Login() {\r\n    //References to HTML Elements\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const navigate = useNavigate();\r\n\r\n    //Use States\r\n    const [errors, setErrors] = useState(Constants.LOGIN_FORM_ERRORS);\r\n    const [helperTexts, setHelperTexts] = useState(Constants.LOGIN_FORM_HELPER_TEXTS);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    //Function to handle for submission\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n        setErrors(Constants.LOGIN_FORM_ERRORS);\r\n        setHelperTexts(Constants.LOGIN_FORM_HELPER_TEXTS);\r\n\r\n        const formData = { email: emailRef.current.value, password: passwordRef.current.value };\r\n        const validationStatus = validateForm(formData, Constants.FORM_TYPE.login);\r\n        setLoading(false);\r\n        setErrors(validationStatus.errors);\r\n        setHelperTexts(validationStatus.helperTexts);\r\n\r\n        if (validationStatus.canSubmit) {\r\n            setLoading(true);\r\n            makeRequest(Constants.LOGIN_API, formData, Constants.SERVER_CALL_TYPE.post)\r\n                .then((response) => {\r\n                    setLoading(false);\r\n                    if (!response || response.data.statusCode === Constants.STATUS_CODE_ERROR) {\r\n                        console.log()\r\n                        alert(Constants.DEFAULT_ERROR_MESSAGE);\r\n                        return;\r\n                    }\r\n                    const shouldLogin = response.data.loginResponse.shouldLogin;\r\n                    const emailErrorMsg = response.data.loginResponse.emailErrorMsg;\r\n                    const passwordErrorMsg = response.data.loginResponse.passwordErrorMsg;\r\n                    console.log(\"Login Response: \", response.data);\r\n                    if (shouldLogin) {\r\n                        navigate(Constants.MAIN_PAGE);\r\n                    } else {\r\n                        console.log(\"Email Error: \", emailErrorMsg, \"Password Error\", passwordErrorMsg);\r\n                        setHelperTexts({\r\n                            email: emailErrorMsg,\r\n                            password: passwordErrorMsg,\r\n                        });\r\n                        console.log(!(passwordErrorMsg.isEmpty()) ? true : false);\r\n                        setErrors({\r\n                            email: !(emailErrorMsg.isEmpty())? true : false,\r\n                            password: !(passwordErrorMsg.isEmpty()) ? true : false,\r\n                        });\r\n                    }\r\n\r\n\r\n                })\r\n                .catch(_ => {\r\n                    setLoading(false);\r\n                    alert(Constants.DEFAULT_ERROR_MESSAGE);\r\n                });\r\n        }\r\n    }\r\n    //Login Module\r\n    return (\r\n        <Container maxWidth='xs' className={styles.container}>\r\n            <div>\r\n                <Typography className={styles.headertext} variant='h5'>\r\n                    Welcome</Typography>\r\n                <Typography className={styles.smalltext} variant='subtitle1'>\r\n                    Please enter your login email and password</Typography>\r\n            </div>\r\n            <form autoComplete='off'\r\n                noValidate\r\n                onSubmit={handleSubmit}>\r\n                <div>\r\n                    <TextField\r\n                        inputRef={emailRef}\r\n                        id='email'\r\n                        type='email'\r\n                        variant='outlined'\r\n                        placeholder='user@example.com'\r\n                        label='Email'\r\n                        error={errors.email}\r\n                        helperText={helperTexts.email}\r\n                        fullWidth />\r\n                    <TextField\r\n                        inputRef={passwordRef}\r\n                        id='password'\r\n                        type='password'\r\n                        variant='outlined'\r\n                        label='Password'\r\n                        error={errors.password}\r\n                        helperText={helperTexts.password}\r\n                        fullWidth />\r\n                </div>\r\n                <div className={styles.smalltext}>Forgot password?</div>\r\n                <LoadingButton\r\n                    className={styles.submitButton}\r\n                    loading={loading}\r\n                    variant='outlined'\r\n                    type='submit'\r\n                >Login</LoadingButton>\r\n            </form>\r\n            <div>\r\n                <Typography variant='subtitle1' className={styles.smalltext}>Don't have an account? <Link to='/register'><b>Sign Up</b></Link></Typography>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}