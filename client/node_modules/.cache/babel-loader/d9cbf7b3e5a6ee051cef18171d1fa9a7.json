{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jil Henry\\\\Documents\\\\Programming\\\\React\\\\acne_diagnosis\\\\client\\\\src\\\\components\\\\Register.js\";\nimport React, { useRef, useState } from 'react';\nimport { Container, Typography, TextField, Button, Grid, Checkbox, InputAdornment, IconButton } from \"@mui/material\";\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styles from '../resources/FormStyles.module.css';\nimport { validateForm } from '../utility/FormValidation';\nimport Constants from \"../utility/Constants\";\nimport { makeRequest } from '../utility/ServerUtil';\n\nfunction Register() {\n  const navigate = useNavigate(); //Form Refs\n\n  const fNameRef = useRef();\n  const lNameRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const cPasswordRef = useRef();\n  const formErrors = {\n    firstName: false,\n    lastname: false,\n    email: false,\n    password: false,\n    confirmPassword: false\n  };\n  const formHelperTexts = {\n    firstName: \"\",\n    lastname: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  }; //Use States\n\n  const [errors, setErrors] = useState(formErrors);\n  const [helperTexts, setHelperTexts] = useState(formHelperTexts);\n  const [checked, setChecked] = useState(false);\n  const [showPassword, setShowPassword] = useState(false); //Handle Showing Passwords\n\n  const handleClickShowPassword = () => setShowPassword(!showPassword); //Handle Checkbox Clicks\n\n\n  const handleCheckbox = event => {\n    setChecked(event.target.checked);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setErrors(formErrors);\n    setHelperTexts(formHelperTexts);\n    const firstName = fNameRef.current.value;\n    const lastName = lNameRef.current.value;\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    const confirmPassword = cPasswordRef.current.value;\n    const formData = {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password,\n      confirmPassword: confirmPassword,\n      isChecked: checked\n    };\n    const validationStatus = validateForm(formData, Constants.FORM_TYPE.register);\n    const vFormErrors = formErrors;\n    const vFormHelperTexts = formHelperTexts; // if (validationStatus.firstNameErrorMsg) {\n    //     vFormErrors.firstName = true;\n    //     vFormHelperTexts.firstName = validationStatus.firstNameErrorMsg;\n    // }\n    // if (validationStatus.lastNameErrorMsg) {\n    //     vFormErrors.lastname = true;\n    //     vFormHelperTexts.lastname = validationStatus.lastNameErrorMsg;\n    // }\n    // if (validationStatus.emailErrorMsg) {\n    //     vFormErrors.email = true;\n    //     vFormHelperTexts.email = validationStatus.emailErrorMsg;\n    // }\n    // if (validationStatus.passwordErrorMsg) {\n    //     vFormErrors.password = true;\n    //     vFormHelperTexts.password = validationStatus.passwordErrorMsg;\n    // }\n    // if (validationStatus.confirmPasswordErrorMsg) {\n    //     vFormErrors.confirmPassword = true;\n    //     vFormHelperTexts.confirmPassword = validationStatus.confirmPasswordErrorMsg;\n    // }\n    // if (validationStatus.checkboxErrorMsg) {\n    //     alert(validationStatus.checkboxErrorMsg);\n    // }\n\n    setErrors(validationStatus.errors);\n    setHelperTexts(vFormHelperTexts);\n\n    if (validationStatus.canSubmit) {\n      const data = {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        password: password\n      };\n      makeRequest(Constants.REGISTER_API, data, Constants.SERVER_CALL_TYPE.post).then(response => {\n        console.log(\"Server Response: \" + response);\n\n        if (response.status === Constants.STATUS_CODE_SUCCESS) {\n          console.log(response.data);\n\n          if (response.data.statusCode === Constants.STATUS_CODE_SUCCESS) {\n            console.log(\"Registraion Response Success\");\n            alert(response.data.message);\n            navigate(Constants.LOGIN_PAGE);\n          } else if (response.data.statusCode === Constants.STATUS_CODE_ERROR) {\n            console.log(\"Registration Response Error\");\n            alert(response.data.message);\n          }\n        } else {\n          console.log(\"Registration Response Error\");\n          alert(Constants.REG_FORM_ERROR_MESSAGE);\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"xs\",\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    className: styles.headertext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    className: styles.smalltext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, \"Please fill to create a new account\")), /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    rowSpacing: 0,\n    className: styles.namerow,\n    columnSpacing: 0.5,\n    direction: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    sx: {\n      m: \"2rem\"\n    },\n    label: \"First Name\",\n    placeholder: \"Ann\",\n    variant: \"outlined\",\n    error: errors.firstName,\n    helperText: helperTexts.firstName,\n    inputRef: fNameRef,\n    inputProps: Constants.TEXTFIELD_STYLING,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"text\",\n    variant: \"outlined\",\n    placeholder: \"Harrison\",\n    label: \"Last Name\",\n    error: errors.lastname,\n    helperText: helperTexts.lastname,\n    inputRef: lNameRef,\n    inputProps: Constants.TEXTFIELD_STYLING,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"email\",\n    variant: \"outlined\",\n    placeholder: \"user@example.com\",\n    label: \"Email\",\n    fullWidth: true,\n    error: errors.email,\n    helperText: helperTexts.email,\n    inputRef: emailRef,\n    inputProps: Constants.TEXTFIELD_STYLING,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"password\",\n    variant: \"outlined\",\n    label: \"Password\",\n    fullWidth: true,\n    error: errors.password,\n    helperText: helperTexts.password,\n    inputRef: passwordRef,\n    inputProps: Constants.TEXTFIELD_STYLING,\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: handleClickShowPassword //onMouseDown={handleMouseDownPassword}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 41\n        }\n      }, showPassword ? /*#__PURE__*/React.createElement(Visibility, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 61\n        }\n      }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 78\n        }\n      })))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"password\",\n    variant: \"outlined\",\n    label: \"Confirm Password\",\n    fullWidth: true,\n    error: errors.confirmPassword,\n    helperText: helperTexts.confirmPassword,\n    inputRef: cPasswordRef,\n    inputProps: Constants.TEXTFIELD_STYLING,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    sx: {\n      color: '#2139cd',\n      '&.Mui-checked': {\n        color: 'primary'\n      }\n    },\n    onChange: handleCheckbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }, \"I accept the \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 39\n    }\n  }, \"Terms of Use & Privacy Policy\"))), /*#__PURE__*/React.createElement(Button, {\n    className: styles.submitButton,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, \"Register\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    className: styles.smalltext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }, \"Already have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 103\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 116\n    }\n  }, \"Login\")))));\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/Jil Henry/Documents/Programming/React/acne_diagnosis/client/src/components/Register.js"],"names":["React","useRef","useState","Container","Typography","TextField","Button","Grid","Checkbox","InputAdornment","IconButton","Visibility","VisibilityOff","Link","useNavigate","styles","validateForm","Constants","makeRequest","Register","navigate","fNameRef","lNameRef","emailRef","passwordRef","cPasswordRef","formErrors","firstName","lastname","email","password","confirmPassword","formHelperTexts","errors","setErrors","helperTexts","setHelperTexts","checked","setChecked","showPassword","setShowPassword","handleClickShowPassword","handleCheckbox","event","target","handleSubmit","preventDefault","current","value","lastName","formData","isChecked","validationStatus","FORM_TYPE","register","vFormErrors","vFormHelperTexts","canSubmit","data","REGISTER_API","SERVER_CALL_TYPE","post","then","response","console","log","status","STATUS_CODE_SUCCESS","statusCode","alert","message","LOGIN_PAGE","STATUS_CODE_ERROR","REG_FORM_ERROR_MESSAGE","container","heading","headertext","smalltext","namerow","m","TEXTFIELD_STYLING","endAdornment","row","color","submitButton"],"mappings":"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","sourcesContent":["import React, { useRef, useState, } from 'react';\r\nimport { Container, Typography, TextField, Button, Grid, Checkbox, InputAdornment, IconButton } from \"@mui/material\";\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport styles from '../resources/FormStyles.module.css';\r\nimport { validateForm } from '../utility/FormValidation';\r\nimport Constants from \"../utility/Constants\"\r\nimport { makeRequest } from '../utility/ServerUtil';\r\n\r\nfunction Register() {\r\n    const navigate = useNavigate();\r\n    //Form Refs\r\n    const fNameRef = useRef();\r\n    const lNameRef = useRef();\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const cPasswordRef = useRef();\r\n\r\n    const formErrors = {\r\n        firstName: false,\r\n        lastname: false,\r\n        email: false,\r\n        password: false,\r\n        confirmPassword: false,\r\n    };\r\n    const formHelperTexts = {\r\n        firstName: \"\",\r\n        lastname: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n    };\r\n\r\n    //Use States\r\n    const [errors, setErrors] = useState(formErrors);\r\n    const [helperTexts, setHelperTexts] = useState(formHelperTexts);\r\n    const [checked, setChecked] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    //Handle Showing Passwords\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    //Handle Checkbox Clicks\r\n    const handleCheckbox = (event) => {\r\n        setChecked(event.target.checked);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setErrors(formErrors);\r\n        setHelperTexts(formHelperTexts);\r\n\r\n        const firstName = fNameRef.current.value;\r\n        const lastName = lNameRef.current.value;\r\n        const email = emailRef.current.value;\r\n        const password = passwordRef.current.value;\r\n        const confirmPassword = cPasswordRef.current.value;\r\n\r\n        const formData = {\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            email: email,\r\n            password: password,\r\n            confirmPassword: confirmPassword,\r\n            isChecked: checked,\r\n        }\r\n\r\n        const validationStatus = validateForm(formData, Constants.FORM_TYPE.register);\r\n        const vFormErrors = formErrors;\r\n        const vFormHelperTexts = formHelperTexts;\r\n\r\n\r\n        // if (validationStatus.firstNameErrorMsg) {\r\n        //     vFormErrors.firstName = true;\r\n        //     vFormHelperTexts.firstName = validationStatus.firstNameErrorMsg;\r\n        // }\r\n\r\n        // if (validationStatus.lastNameErrorMsg) {\r\n        //     vFormErrors.lastname = true;\r\n        //     vFormHelperTexts.lastname = validationStatus.lastNameErrorMsg;\r\n        // }\r\n\r\n        // if (validationStatus.emailErrorMsg) {\r\n        //     vFormErrors.email = true;\r\n        //     vFormHelperTexts.email = validationStatus.emailErrorMsg;\r\n        // }\r\n\r\n        // if (validationStatus.passwordErrorMsg) {\r\n        //     vFormErrors.password = true;\r\n        //     vFormHelperTexts.password = validationStatus.passwordErrorMsg;\r\n        // }\r\n\r\n        // if (validationStatus.confirmPasswordErrorMsg) {\r\n        //     vFormErrors.confirmPassword = true;\r\n        //     vFormHelperTexts.confirmPassword = validationStatus.confirmPasswordErrorMsg;\r\n        // }\r\n\r\n        // if (validationStatus.checkboxErrorMsg) {\r\n        //     alert(validationStatus.checkboxErrorMsg);\r\n        // }\r\n\r\n        setErrors(validationStatus.errors);\r\n        setHelperTexts(vFormHelperTexts);\r\n\r\n        if (validationStatus.canSubmit) {\r\n            const data = {\r\n                firstName: firstName,\r\n                lastName: lastName,\r\n                email: email,\r\n                password: password,\r\n            }\r\n            makeRequest(Constants.REGISTER_API, data, Constants.SERVER_CALL_TYPE.post)\r\n                .then((response) => {\r\n                    console.log(\"Server Response: \" + response);\r\n                    if (response.status === Constants.STATUS_CODE_SUCCESS) {\r\n                        console.log(response.data)\r\n                        if (response.data.statusCode === Constants.STATUS_CODE_SUCCESS) {\r\n                            console.log(\"Registraion Response Success\");\r\n                            alert(response.data.message);\r\n                            navigate(Constants.LOGIN_PAGE);\r\n                        }\r\n                        else if (response.data.statusCode === Constants.STATUS_CODE_ERROR) {\r\n                            console.log(\"Registration Response Error\");\r\n                            alert(response.data.message);\r\n                        }\r\n                    }\r\n                    else {\r\n                        console.log(\"Registration Response Error\");\r\n                        alert(Constants.REG_FORM_ERROR_MESSAGE);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth='xs' className={styles.container}>\r\n            <div className={styles.heading}>\r\n                <Typography variant='h5' className={styles.headertext}>Sign Up</Typography>\r\n                <Typography variant='subtitle1' className={styles.smalltext}>Please fill to create a new account</Typography>\r\n            </div>\r\n            <form autoComplete='off'\r\n                noValidate\r\n                onSubmit={handleSubmit}>\r\n                <Grid\r\n                    container\r\n                    rowSpacing={0}\r\n                    className={styles.namerow}\r\n                    columnSpacing={0.5}\r\n                    direction=\"row\"\r\n                    justifyContent=\"space-around\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            sx={{ m: \"2rem\" }}\r\n                            label='First Name'\r\n                            placeholder='Ann'\r\n                            variant='outlined'\r\n                            error={errors.firstName}\r\n                            helperText={helperTexts.firstName}\r\n                            inputRef={fNameRef}\r\n                            inputProps={Constants.TEXTFIELD_STYLING}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            type='text'\r\n                            variant='outlined'\r\n                            placeholder='Harrison'\r\n                            label='Last Name'\r\n                            error={errors.lastname}\r\n                            helperText={helperTexts.lastname}\r\n                            inputRef={lNameRef}\r\n                            inputProps={Constants.TEXTFIELD_STYLING}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            type='email'\r\n                            variant='outlined'\r\n                            placeholder='user@example.com'\r\n                            label='Email'\r\n                            fullWidth\r\n                            error={errors.email}\r\n                            helperText={helperTexts.email}\r\n                            inputRef={emailRef}\r\n                            inputProps={Constants.TEXTFIELD_STYLING}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            type='password'\r\n                            variant='outlined'\r\n                            label='Password'\r\n                            fullWidth\r\n                            error={errors.password}\r\n                            helperText={helperTexts.password}\r\n                            inputRef={passwordRef}\r\n                            inputProps={Constants.TEXTFIELD_STYLING}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                        //onMouseDown={handleMouseDownPassword}\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            type='password'\r\n                            variant='outlined'\r\n                            label='Confirm Password'\r\n                            fullWidth\r\n                            error={errors.confirmPassword}\r\n                            helperText={helperTexts.confirmPassword}\r\n                            inputRef={cPasswordRef}\r\n                            inputProps={Constants.TEXTFIELD_STYLING}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <div className={styles.row}>\r\n                    <Checkbox\r\n                        sx={{\r\n                            color: '#2139cd',\r\n                            '&.Mui-checked': {\r\n                                color: 'primary',\r\n                            },\r\n                        }}\r\n                        onChange={handleCheckbox}\r\n                    />\r\n                    <div>I accept the <b>Terms of Use &amp; Privacy Policy</b></div>\r\n                </div>\r\n                <Button className={styles.submitButton} type='submit'>Register</Button>\r\n            </form>\r\n            <div>\r\n                <Typography variant='subtitle1' className={styles.smalltext}>Already have an account? <Link to='/'><b>Login</b></Link></Typography>\r\n            </div>\r\n        </Container>\r\n\r\n    )\r\n}\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}