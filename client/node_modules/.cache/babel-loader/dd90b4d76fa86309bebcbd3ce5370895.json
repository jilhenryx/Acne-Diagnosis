{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Jil Henry\\\\Documents\\\\Programming\\\\React\\\\acne_diagnosis\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jil Henry\\\\Documents\\\\Programming\\\\React\\\\acne_diagnosis\\\\client\\\\src\\\\components\\\\Login.js\";\nimport React, { useRef, useState } from 'react';\nimport { Container, TextField, Typography } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { Link } from 'react-router-dom';\nimport styles from '../resources/FormStyles.module.css';\nimport { validateForm } from '../utility/FormValidation';\nimport Constants from \"../utility/Constants\";\nimport { makeRequest } from '../utility/ServerUtil';\n\nfunction Login() {\n  //References to HTML Elements\n  var emailRef = useRef();\n  var passwordRef = useRef(); //Use States\n\n  var _useState = useState(Constants.LOGIN_FORM_ERRORS),\n      _useState2 = _slicedToArray(_useState, 2),\n      errors = _useState2[0],\n      setErrors = _useState2[1];\n\n  var _useState3 = useState(Constants.LOGIN_FORM_HELPER_TEXTS),\n      _useState4 = _slicedToArray(_useState3, 2),\n      helperTexts = _useState4[0],\n      setHelperTexts = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1]; //Function to handle for submission\n\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    setLoading(true);\n    setErrors(Constants.LOGIN_FORM_ERRORS);\n    setHelperTexts(Constants.LOGIN_FORM_HELPER_TEXTS);\n    var formData = {\n      email: emailRef.current.value,\n      password: passwordRef.current.value\n    };\n    var validationStatus = validateForm(formData, Constants.FORM_TYPE.login);\n    setLoading(false);\n    setErrors(validationStatus.errors);\n    setHelperTexts(validationStatus.helperTexts);\n\n    if (validationStatus.canSubmit) {\n      setLoading(true);\n      makeRequest(Constants.LOGIN_API, formData, Constants.SERVER_CALL_TYPE.post).then(function (response) {\n        setLoading(false);\n\n        if (!response || response.data.statusCode === Constants.STATUS_CODE_ERROR) {\n          alert(Constants.DEFAULT_ERROR_MESSAGE);\n          return;\n        }\n\n        if (response.data.shouldLogin) {} else {\n          setHelperTexts({\n            email: res\n          });\n        }\n      }).catch(function (_) {\n        setLoading(false);\n        alert(Constants.DEFAULT_ERROR_MESSAGE);\n      });\n    }\n  }; //Login Module\n\n\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"xs\",\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: styles.headertext,\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Welcome\"), /*#__PURE__*/React.createElement(Typography, {\n    className: styles.smalltext,\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Please enter your login email and password\")), /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    inputRef: emailRef,\n    id: \"email\",\n    type: \"email\",\n    variant: \"outlined\",\n    placeholder: \"user@example.com\",\n    label: \"Email\",\n    error: errors.email,\n    helperText: helperTexts.email,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    inputRef: passwordRef,\n    id: \"password\",\n    type: \"password\",\n    variant: \"outlined\",\n    label: \"Password\",\n    error: errors.password,\n    helperText: helperTexts.password,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.smalltext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Forgot password?\"), /*#__PURE__*/React.createElement(LoadingButton, {\n    className: styles.submitButton,\n    loading: loading,\n    variant: \"outlined\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    className: styles.smalltext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"Don't have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 101\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 122\n    }\n  }, \"Sign Up\")))));\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Jil Henry/Documents/Programming/React/acne_diagnosis/client/src/components/Login.js"],"names":["React","useRef","useState","Container","TextField","Typography","LoadingButton","Link","styles","validateForm","Constants","makeRequest","Login","emailRef","passwordRef","LOGIN_FORM_ERRORS","errors","setErrors","LOGIN_FORM_HELPER_TEXTS","helperTexts","setHelperTexts","loading","setLoading","handleSubmit","event","preventDefault","formData","email","current","value","password","validationStatus","FORM_TYPE","login","canSubmit","LOGIN_API","SERVER_CALL_TYPE","post","then","response","data","statusCode","STATUS_CODE_ERROR","alert","DEFAULT_ERROR_MESSAGE","shouldLogin","res","catch","_","container","headertext","smalltext","submitButton"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport {Container, TextField, Typography } from '@mui/material';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from '../resources/FormStyles.module.css';\r\nimport { validateForm } from '../utility/FormValidation';\r\nimport Constants from \"../utility/Constants\"\r\nimport { makeRequest } from '../utility/ServerUtil';\r\n\r\nfunction Login() {\r\n    //References to HTML Elements\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n\r\n    //Use States\r\n    const [errors, setErrors] = useState(Constants.LOGIN_FORM_ERRORS);\r\n    const [helperTexts, setHelperTexts] = useState(Constants.LOGIN_FORM_HELPER_TEXTS);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    //Function to handle for submission\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n        setErrors(Constants.LOGIN_FORM_ERRORS);\r\n        setHelperTexts(Constants.LOGIN_FORM_HELPER_TEXTS);\r\n\r\n        const formData = { email: emailRef.current.value, password: passwordRef.current.value };\r\n        const validationStatus = validateForm(formData, Constants.FORM_TYPE.login);\r\n        setLoading(false);\r\n        setErrors(validationStatus.errors);\r\n        setHelperTexts(validationStatus.helperTexts);\r\n\r\n        if (validationStatus.canSubmit) {\r\n            setLoading(true);\r\n            makeRequest(Constants.LOGIN_API, formData, Constants.SERVER_CALL_TYPE.post)\r\n                .then((response) => {\r\n                    setLoading(false);\r\n                    if (!response || response.data.statusCode === Constants.STATUS_CODE_ERROR) {\r\n                        alert(Constants.DEFAULT_ERROR_MESSAGE);\r\n                        return;\r\n                    }\r\n                    \r\n                    if(response.data.shouldLogin){\r\n\r\n                    }else{\r\n                        setHelperTexts({\r\n                            email: res\r\n                        })\r\n                    }\r\n                    \r\n                        \r\n                })\r\n                .catch(_ => {\r\n                    setLoading(false);\r\n                    alert(Constants.DEFAULT_ERROR_MESSAGE);\r\n                });\r\n        }\r\n    }\r\n    //Login Module\r\n    return (\r\n        <Container maxWidth='xs' className={styles.container}>\r\n            <div>\r\n                <Typography className={styles.headertext} variant='h5'>\r\n                    Welcome</Typography>\r\n                <Typography className={styles.smalltext} variant='subtitle1'>\r\n                    Please enter your login email and password</Typography>\r\n            </div>\r\n            <form autoComplete='off'\r\n                noValidate\r\n                onSubmit={handleSubmit}>\r\n                <div>\r\n                    <TextField\r\n                        inputRef={emailRef}\r\n                        id='email'\r\n                        type='email'\r\n                        variant='outlined'\r\n                        placeholder='user@example.com'\r\n                        label='Email'\r\n                        error={errors.email}\r\n                        helperText={helperTexts.email}\r\n                        fullWidth />\r\n                    <TextField\r\n                        inputRef={passwordRef}\r\n                        id='password'\r\n                        type='password'\r\n                        variant='outlined'\r\n                        label='Password'\r\n                        error={errors.password}\r\n                        helperText={helperTexts.password}\r\n                        fullWidth />\r\n                </div>\r\n                <div className={styles.smalltext}>Forgot password?</div>\r\n                <LoadingButton\r\n                    className={styles.submitButton}\r\n                    loading={loading}\r\n                    variant='outlined'\r\n                    type='submit'\r\n                >Login</LoadingButton>\r\n            </form>\r\n            <div>\r\n                <Typography variant='subtitle1' className={styles.smalltext}>Don't have an account? <Link to='/register'><b>Sign Up</b></Link></Typography>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}