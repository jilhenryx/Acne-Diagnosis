{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Jil Henry\\\\Documents\\\\Programming\\\\React\\\\acne_diagnosis\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jil Henry\\\\Documents\\\\Programming\\\\React\\\\acne_diagnosis\\\\client\\\\src\\\\components\\\\Main.js\";\nimport React, { useState } from 'react';\nimport { Typography } from '@mui/material';\nimport { useDropzone } from 'react-dropzone';\nimport { useNavigate } from 'react-router-dom';\nimport styles from '../resources/Main.module.css';\nimport Layout from './Layout';\nimport Constants from '../utility/Constants';\nimport { Container } from '../resources/styledComponents';\n\nfunction Main() {\n  var navigate = useNavigate();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1]; //const [files, setFiles] = useState([]);\n  //Initializing DropZone\n\n\n  var _useDropzone = useDropzone({\n    accept: [\"image/png\", \"image/jpeg\"],\n    onDrop: function onDrop(acceptedFiles, fileRejections) {\n      if (acceptedFiles) {\n        acceptedFiles.map(function (file) {\n          return Object.assign(file, {\n            preview: URL.createObjectURL(file)\n          });\n        });\n        console.log(\"Acccepted Files: \", acceptedFiles);\n        uploadFiles(acceptedFiles);\n      } else if (fileRejections) {\n        alert(\"Uploaded Invalid Files\");\n      }\n    }\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps,\n      isDragAccept = _useDropzone.isDragAccept,\n      isDragReject = _useDropzone.isDragReject;\n\n  var uploadFiles = function uploadFiles(files) {\n    if (files.length < 1) {\n      alert(\"Please Upload .PNG or .JPG Images\");\n      return;\n    }\n\n    console.log(\"Sending: \", files);\n    setLoading(true);\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    isHome: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Upload Images\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"For a better prediction please upload multiple images\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['file-upload-container'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Container, Object.assign({}, getRootProps({\n    isDragAccept: isDragAccept,\n    isDragReject: isDragReject\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['file-upload-caption'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }, isDragReject ? \"Invalid File Format. PNG or JPG Images Only\" : \"Drag and Drop Images or click to browse device\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.footer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Only .png and .jpg images are allowed\"))));\n}\n\nexport default Main;","map":{"version":3,"sources":["C:/Users/Jil Henry/Documents/Programming/React/acne_diagnosis/client/src/components/Main.js"],"names":["React","useState","Typography","useDropzone","useNavigate","styles","Layout","Constants","Container","Main","navigate","loading","setLoading","accept","onDrop","acceptedFiles","fileRejections","map","file","Object","assign","preview","URL","createObjectURL","console","log","uploadFiles","alert","getRootProps","getInputProps","isDragAccept","isDragReject","files","length","modal","heading","footer"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styles from '../resources/Main.module.css';\r\nimport Layout from './Layout';\r\nimport Constants from '../utility/Constants';\r\nimport { Container } from '../resources/styledComponents';\r\nfunction Main() {\r\n    const navigate = useNavigate();\r\n    const [loading, setLoading] = useState(false);\r\n    //const [files, setFiles] = useState([]);\r\n\r\n    //Initializing DropZone\r\n    const { getRootProps, getInputProps, isDragAccept, isDragReject, }\r\n        = useDropzone({\r\n            accept: [\"image/png\", \"image/jpeg\"],\r\n            onDrop: (acceptedFiles, fileRejections) => {\r\n                if (acceptedFiles) {\r\n                    acceptedFiles.map(file =>\r\n                        Object.assign(file, { preview: URL.createObjectURL(file) })\r\n                    )\r\n                    console.log(\"Acccepted Files: \", acceptedFiles);\r\n                    uploadFiles(acceptedFiles);\r\n                }\r\n                else if (fileRejections) {\r\n                    alert(\"Uploaded Invalid Files\");\r\n                }\r\n            }\r\n        })\r\n\r\n    const uploadFiles = (files) => {\r\n        if (files.length < 1) {\r\n            alert(\"Please Upload .PNG or .JPG Images\");\r\n            return;\r\n        }\r\n        console.log(\"Sending: \", files);\r\n        setLoading(true);\r\n\r\n    }\r\n\r\n    return (\r\n        <Layout isHome={true}>{\r\n            <div className={styles.modal}>\r\n                <div className={styles.heading}>\r\n                    <Typography variant='h6'>Upload Images</Typography>\r\n                    <Typography variant='subtitle2'>\r\n                        For a better prediction please upload multiple images\r\n                    </Typography>\r\n                </div>\r\n                <div className={styles['file-upload-container']}>\r\n                    <Container {...getRootProps({ isDragAccept, isDragReject })}>\r\n                        <input {...getInputProps()} />\r\n                        <div className={styles['file-upload-caption']}>\r\n                            <Typography variant='p'>\r\n                                {isDragReject ? \"Invalid File Format. PNG or JPG Images Only\" : \"Drag and Drop Images or click to browse device\"}\r\n                            </Typography>\r\n                        </div>\r\n                    </Container>\r\n                </div>\r\n                <div className={styles.footer}>\r\n                    <Typography variant='subtitle2'>\r\n                        Only .png and .jpg images are allowed\r\n                    </Typography>\r\n                </div>\r\n            </div>}\r\n        </Layout>\r\n    );\r\n}\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}