{"ast":null,"code":"import { validEmail } from './Regex';\nimport Constants from './Constants';\n/*\r\n*Function to Handle Form Submission\r\n*PARAMETERS\r\n    values: an object containing form data to be validated\r\n    formType: integer code for type of form\r\n\r\n*OUTPUT\r\n    validationInfo: an object containing information about validation process\r\n*/\n\nexport function validateForm(values, formType) {\n  var canSubmit = true;\n  var validationInfo = {\n    errors: {},\n    helperTexts: {}\n  };\n  validationInfo.errors = {\n    firstname: false,\n    lastname: false,\n    email: false,\n    password: false,\n    confirmPassword: false\n  };\n  ;\n  validationInfo.helperTexts = Constants.FORM_HELPER_TEXTS;\n  var email = values.email ? values.email : '';\n  var password = values.password ? values.password : '';\n  console.log(\"Form Validation Error: \", validationInfo.errors); //console.log(\"Email: \" + email + \"\\nPassword: \" + password);\n\n  if (email === '' || !validEmail.test(email)) {\n    validationInfo.helperTexts.email = 'Invalid Email';\n    validationInfo.errors.email = true;\n    canSubmit = false;\n  }\n\n  if (password === '' || password.length < 8) {\n    validationInfo.helperTexts.password = 'Password must be 8 or more characters';\n    validationInfo.errors.password = true;\n    canSubmit = false;\n  }\n\n  if (formType === Constants.FORM_TYPE.register) {\n    var firstName = values.firstName ? values.firstName : '';\n    var lastName = values.lastName ? values.lastName : '';\n    var confirmPassword = values.confirmPassword ? values.confirmPassword : '';\n    var isChecked = values.isChecked ? values.isChecked : false;\n\n    if (firstName === '') {\n      validationInfo.helperTexts.firstname = 'First Name is required';\n      validationInfo.errors.firstname = true;\n      canSubmit = false;\n    }\n\n    if (lastName === '') {\n      validationInfo.helperTexts.lastname = 'Last Name is required';\n      validationInfo.errors.lastname = true;\n      canSubmit = false;\n    }\n\n    if (!(confirmPassword === password)) {\n      validationInfo.helperTexts.confirmPassword = 'Passwords doesn\\'t match';\n      validationInfo.errors.confirmPassword = true;\n      canSubmit = false;\n    }\n\n    if (!isChecked) {\n      validationInfo.helperTexts.isChecked = \"You must accept the Terms & Conditions\";\n      canSubmit = false;\n    }\n  }\n\n  validationInfo.canSubmit = canSubmit;\n  console.log(\"\", validationInfo);\n  return validationInfo;\n} //end of function","map":{"version":3,"sources":["C:/Users/Jil Henry/Documents/Programming/React/acne_diagnosis/client/src/utility/FormValidation.js"],"names":["validEmail","Constants","validateForm","values","formType","canSubmit","validationInfo","errors","helperTexts","firstname","lastname","email","password","confirmPassword","FORM_HELPER_TEXTS","console","log","test","length","FORM_TYPE","register","firstName","lastName","isChecked"],"mappings":"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","sourcesContent":["import { validEmail } from './Regex'\r\nimport Constants from './Constants'\r\n/*\r\n*Function to Handle Form Submission\r\n*PARAMETERS\r\n    values: an object containing form data to be validated\r\n    formType: integer code for type of form\r\n\r\n*OUTPUT\r\n    validationInfo: an object containing information about validation process\r\n*/\r\n\r\nexport function validateForm(values, formType) {\r\n    var canSubmit = true;\r\n    const validationInfo = {\r\n        errors:{},\r\n        helperTexts:{}\r\n    };\r\n    validationInfo.errors = {\r\n        firstname: false,\r\n        lastname: false,\r\n        email: false,\r\n        password: false,\r\n        confirmPassword: false,\r\n    };;\r\n    validationInfo.helperTexts = Constants.FORM_HELPER_TEXTS;\r\n    const email = values.email ? values.email : '';\r\n    const password = values.password ? values.password : '';\r\n    console.log(\"Form Validation Error: \", validationInfo.errors);\r\n\r\n    //console.log(\"Email: \" + email + \"\\nPassword: \" + password);\r\n    if (email === '' || !validEmail.test(email)) {\r\n        validationInfo.helperTexts.email = 'Invalid Email';\r\n        validationInfo.errors.email = true;\r\n        canSubmit = false;\r\n    }\r\n    if (password === '' || password.length < 8) {\r\n        validationInfo.helperTexts.password = 'Password must be 8 or more characters';\r\n        validationInfo.errors.password = true;\r\n        canSubmit = false;\r\n    }\r\n    if (formType === Constants.FORM_TYPE.register) {\r\n        const firstName = values.firstName ? values.firstName : '';\r\n        const lastName = values.lastName ? values.lastName : '';\r\n        const confirmPassword = values.confirmPassword ? values.confirmPassword : '';\r\n        const isChecked = values.isChecked ? values.isChecked : false;\r\n        \r\n        if (firstName === '') {\r\n            validationInfo.helperTexts.firstname = 'First Name is required';\r\n            validationInfo.errors.firstname = true;\r\n            canSubmit = false;\r\n        }\r\n        if (lastName === '') {\r\n            validationInfo.helperTexts.lastname= 'Last Name is required';\r\n            validationInfo.errors.lastname = true;\r\n            canSubmit = false;\r\n        }\r\n        if (!(confirmPassword===password)) {\r\n            validationInfo.helperTexts.confirmPassword = 'Passwords doesn\\'t match';\r\n            validationInfo.errors.confirmPassword = true;\r\n            canSubmit = false;\r\n        }\r\n        if(!isChecked){\r\n            validationInfo.helperTexts.isChecked= \"You must accept the Terms & Conditions\";\r\n            canSubmit = false;\r\n        }\r\n    }\r\n\r\n    validationInfo.canSubmit = canSubmit;\r\n    console.log(\"\",validationInfo)\r\n    return validationInfo;\r\n}//end of function"]},"metadata":{},"sourceType":"module"}