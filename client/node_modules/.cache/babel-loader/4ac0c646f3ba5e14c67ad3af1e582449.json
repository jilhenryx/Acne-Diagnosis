{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jil Henry\\\\Documents\\\\Programming\\\\React\\\\acne_diagnosis\\\\client\\\\src\\\\components\\\\Login.js\";\nimport React, { useRef, useState } from 'react';\nimport { Button, Container, TextField, Typography } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport styles from '../resources/FormStyles.module.css';\nimport { validateForm } from '../utility/FormValidation';\nimport Constants from \"../utility/Constants\";\n\nfunction Login() {\n  //References to HTML Elements\n  const emailRef = useRef();\n  const passwordRef = useRef(); //Use States\n\n  const [inputEmailStatus, setInputEmailStatus] = useState({\n    error: false,\n    helperText: ''\n  });\n  const [inputPasswordStatus, setInputPasswordStatus] = useState({\n    error: false,\n    helperText: ''\n  }); //Function to handle for submission\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setInputEmailStatus({\n      error: false,\n      helperText: ''\n    });\n    setInputPasswordStatus({\n      error: false,\n      helperText: ''\n    }); //console.log(inputEmailStatus);\n    //console.log(inputPasswordStatus);\n\n    const formData = {\n      email: emailRef.current.value,\n      password: passwordRef.current.value\n    };\n    const validationStatus = validateForm(formData, Constants.FORM_TYPE.login); //console.log(validationStatus);\n\n    if (validationStatus.emailErrorMsg) {\n      //console.log('Error in mail');\n      setInputEmailStatus({\n        error: true,\n        helperText: validationStatus.emailErrorMsg\n      });\n    }\n\n    if (validationStatus.passwordErrorMsg) {\n      //console.log('Error in password');\n      setInputPasswordStatus({\n        error: true,\n        helperText: validationStatus.passwordErrorMsg\n      });\n    } //console.log(inputEmailStatus);\n    //console.log(inputPasswordStatus);\n\n\n    if (validationStatus.canSubmit) {\n      alert('Form Submitted');\n    }\n  }; //Login Module\n\n\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"xs\",\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: styles.headertext,\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Welcome\"), /*#__PURE__*/React.createElement(Typography, {\n    className: styles.smalltext,\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Please enter your login email and password\")), /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    inputRef: emailRef,\n    id: \"email\",\n    type: \"email\",\n    variant: \"outlined\",\n    placeholder: \"user@example.com\",\n    label: \"Email\",\n    error: inputEmailStatus.error,\n    helperText: inputEmailStatus.helperText,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    inputRef: passwordRef,\n    id: \"password\",\n    type: \"password\",\n    variant: \"outlined\",\n    label: \"Password\",\n    error: inputPasswordStatus.error,\n    helperText: inputPasswordStatus.helperText,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.smalltext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Forgot password?\"), /*#__PURE__*/React.createElement(Button, {\n    className: styles.submitButton,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    className: styles.smalltext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Don't have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 101\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 122\n    }\n  }, \"Sign Up\")))));\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Jil Henry/Documents/Programming/React/acne_diagnosis/client/src/components/Login.js"],"names":["React","useRef","useState","Button","Container","TextField","Typography","Link","styles","validateForm","Constants","Login","emailRef","passwordRef","inputEmailStatus","setInputEmailStatus","error","helperText","inputPasswordStatus","setInputPasswordStatus","handleSubmit","event","preventDefault","formData","email","current","value","password","validationStatus","FORM_TYPE","login","emailErrorMsg","passwordErrorMsg","canSubmit","alert","container","headertext","smalltext","submitButton"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport { Button, Container, TextField, Typography } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from '../resources/FormStyles.module.css';\r\nimport { validateForm } from '../utility/FormValidation';\r\nimport Constants from \"../utility/Constants\"\r\n\r\nfunction Login() {\r\n    //References to HTML Elements\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n\r\n    //Use States\r\n    const [inputEmailStatus, setInputEmailStatus] = useState({ error: false, helperText: '' });\r\n    const [inputPasswordStatus, setInputPasswordStatus] = useState({ error: false, helperText: '' });\r\n\r\n    //Function to handle for submission\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setInputEmailStatus({ error: false, helperText: '' });\r\n        setInputPasswordStatus({ error: false, helperText: '' });\r\n        //console.log(inputEmailStatus);\r\n        //console.log(inputPasswordStatus);\r\n        const formData = { email: emailRef.current.value, password: passwordRef.current.value };\r\n        const validationStatus = validateForm(formData, Constants.FORM_TYPE.login);\r\n        //console.log(validationStatus);\r\n\r\n        if (validationStatus.emailErrorMsg) {\r\n            //console.log('Error in mail');\r\n            setInputEmailStatus({ error: true, helperText: validationStatus.emailErrorMsg });\r\n        }\r\n\r\n        if (validationStatus.passwordErrorMsg) {\r\n            //console.log('Error in password');\r\n            setInputPasswordStatus({ error: true, helperText: validationStatus.passwordErrorMsg });\r\n        }\r\n        //console.log(inputEmailStatus);\r\n        //console.log(inputPasswordStatus);\r\n\r\n        if (validationStatus.canSubmit) {\r\n            alert('Form Submitted');\r\n        }\r\n    }\r\n    //Login Module\r\n    return (\r\n        <Container maxWidth='xs' className={styles.container}>\r\n            <div>\r\n                <Typography className={styles.headertext} variant='h4'>\r\n                    Welcome</Typography>\r\n                <Typography className={styles.smalltext} variant='subtitle1'>\r\n                    Please enter your login email and password</Typography>\r\n            </div>\r\n            <form autoComplete='off'\r\n                noValidate\r\n                onSubmit={handleSubmit}>\r\n                <div>\r\n                    <TextField\r\n                        inputRef={emailRef}\r\n                        id='email'\r\n                        type='email'\r\n                        variant='outlined'\r\n                        placeholder='user@example.com'\r\n                        label='Email'\r\n                        error={inputEmailStatus.error}\r\n                        helperText={inputEmailStatus.helperText}\r\n                        fullWidth />\r\n                    <TextField\r\n                        inputRef={passwordRef}\r\n                        id='password'\r\n                        type='password'\r\n                        variant='outlined'\r\n                        label='Password'\r\n                        error={inputPasswordStatus.error}\r\n                        helperText={inputPasswordStatus.helperText}\r\n                        fullWidth />\r\n                </div>\r\n                <div className={styles.smalltext}>Forgot password?</div>\r\n                <Button\r\n                    className={styles.submitButton}\r\n                    type='submit'\r\n                >Login</Button>\r\n            </form>\r\n            <div>\r\n                <Typography variant='subtitle1' className={styles.smalltext}>Don't have an account? <Link to='/register'><b>Sign Up</b></Link></Typography>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}