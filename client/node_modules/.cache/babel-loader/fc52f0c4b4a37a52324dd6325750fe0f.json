{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Jil Henry\\\\Documents\\\\Programming\\\\React\\\\acne_diagnosis\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jil Henry\\\\Documents\\\\Programming\\\\React\\\\acne_diagnosis\\\\client\\\\src\\\\components\\\\Login.js\";\nimport React, { useRef, useState } from 'react';\nimport { Button, Container, TextField, Typography } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport styles from '../resources/FormStyles.module.css';\nimport { validateForm } from '../utility/FormValidation';\nimport Constants from \"../utility/Constants\";\nimport { makeRequest } from '../utility/ServerUtil';\n\nfunction Login() {\n  //References to HTML Elements\n  var emailRef = useRef();\n  var passwordRef = useRef(); //Use States\n\n  var _useState = useState(Constants.LOGIN_FORM_ERRORS),\n      _useState2 = _slicedToArray(_useState, 2),\n      errors = _useState2[0],\n      setErrors = _useState2[1];\n\n  var _useState3 = useState(Constants.LOGIN_FORM_HELPER_TEXTS),\n      _useState4 = _slicedToArray(_useState3, 2),\n      helperTexts = _useState4[0],\n      setHelperTexts = _useState4[1];\n\n  var _useState5 = useState({\n    error: false,\n    helperText: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      inputEmailStatus = _useState6[0],\n      setInputEmailStatus = _useState6[1];\n\n  var _useState7 = useState({\n    error: false,\n    helperText: ''\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      inputPasswordStatus = _useState8[0],\n      setInputPasswordStatus = _useState8[1]; //Function to handle for submission\n\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    setErrors(Constants.LOGIN_FORM_ERRORS);\n    setHelperTexts(Constants.LOGIN_FORM_HELPER_TEXTS);\n    setInputEmailStatus({\n      error: false,\n      helperText: ''\n    });\n    setInputPasswordStatus({\n      error: false,\n      helperText: ''\n    });\n    var formData = {\n      email: emailRef.current.value,\n      password: passwordRef.current.value\n    };\n    var validationStatus = validateForm(formData, Constants.FORM_TYPE.login);\n\n    if (validationStatus.emailErrorMsg) {\n      setInputEmailStatus({\n        error: true,\n        helperText: validationStatus.emailErrorMsg\n      });\n    }\n\n    if (validationStatus.passwordErrorMsg) {\n      //console.log('Error in password');\n      setInputPasswordStatus({\n        error: true,\n        helperText: validationStatus.passwordErrorMsg\n      });\n    }\n\n    set; //console.log(inputEmailStatus);\n    //console.log(inputPasswordStatus);\n\n    if (validationStatus.canSubmit) {\n      makeRequest(Constants.LOGIN_API, formData);\n    }\n  }; //Login Module\n\n\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"xs\",\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: styles.headertext,\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Welcome\"), /*#__PURE__*/React.createElement(Typography, {\n    className: styles.smalltext,\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Please enter your login email and password\")), /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    inputRef: emailRef,\n    id: \"email\",\n    type: \"email\",\n    variant: \"outlined\",\n    placeholder: \"user@example.com\",\n    label: \"Email\",\n    error: inputEmailStatus.error,\n    helperText: inputEmailStatus.helperText,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    inputRef: passwordRef,\n    id: \"password\",\n    type: \"password\",\n    variant: \"outlined\",\n    label: \"Password\",\n    error: inputPasswordStatus.error,\n    helperText: inputPasswordStatus.helperText,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.smalltext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"Forgot password?\"), /*#__PURE__*/React.createElement(Button, {\n    className: styles.submitButton,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    className: styles.smalltext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Don't have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 101\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 122\n    }\n  }, \"Sign Up\")))));\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Jil Henry/Documents/Programming/React/acne_diagnosis/client/src/components/Login.js"],"names":["React","useRef","useState","Button","Container","TextField","Typography","Link","styles","validateForm","Constants","makeRequest","Login","emailRef","passwordRef","LOGIN_FORM_ERRORS","errors","setErrors","LOGIN_FORM_HELPER_TEXTS","helperTexts","setHelperTexts","error","helperText","inputEmailStatus","setInputEmailStatus","inputPasswordStatus","setInputPasswordStatus","handleSubmit","event","preventDefault","formData","email","current","value","password","validationStatus","FORM_TYPE","login","emailErrorMsg","passwordErrorMsg","set","canSubmit","LOGIN_API","container","headertext","smalltext","submitButton"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport { Button, Container, TextField, Typography } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from '../resources/FormStyles.module.css';\r\nimport { validateForm } from '../utility/FormValidation';\r\nimport Constants from \"../utility/Constants\"\r\nimport { makeRequest } from '../utility/ServerUtil';\r\n\r\nfunction Login() {\r\n    \r\n    //References to HTML Elements\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n\r\n    //Use States\r\n    const [errors, setErrors] = useState(Constants.LOGIN_FORM_ERRORS);\r\n    const [helperTexts, setHelperTexts] = useState(Constants.LOGIN_FORM_HELPER_TEXTS);\r\n    const [inputEmailStatus, setInputEmailStatus] = useState({ error: false, helperText: '' });\r\n    const [inputPasswordStatus, setInputPasswordStatus] = useState({ error: false, helperText: '' });\r\n\r\n    //Function to handle for submission\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setErrors(Constants.LOGIN_FORM_ERRORS);\r\n        setHelperTexts(Constants.LOGIN_FORM_HELPER_TEXTS);\r\n        setInputEmailStatus({ error: false, helperText: '' });\r\n        setInputPasswordStatus({ error: false, helperText: '' });\r\n        \r\n        const formData = { email: emailRef.current.value, password: passwordRef.current.value };\r\n        const validationStatus = validateForm(formData, Constants.FORM_TYPE.login);\r\n\r\n        if (validationStatus.emailErrorMsg) {\r\n            setInputEmailStatus({ error: true, helperText: validationStatus.emailErrorMsg });\r\n        }\r\n\r\n        if (validationStatus.passwordErrorMsg) {\r\n            //console.log('Error in password');\r\n            setInputPasswordStatus({ error: true, helperText: validationStatus.passwordErrorMsg });\r\n        }\r\n\r\n        set\r\n        //console.log(inputEmailStatus);\r\n        //console.log(inputPasswordStatus);\r\n\r\n        if (validationStatus.canSubmit) {\r\n            makeRequest(Constants.LOGIN_API,formData)\r\n        }\r\n    }\r\n    //Login Module\r\n    return (\r\n        <Container maxWidth='xs' className={styles.container}>\r\n            <div>\r\n                <Typography className={styles.headertext} variant='h5'>\r\n                    Welcome</Typography>\r\n                <Typography className={styles.smalltext} variant='subtitle1'>\r\n                    Please enter your login email and password</Typography>\r\n            </div>\r\n            <form autoComplete='off'\r\n                noValidate\r\n                onSubmit={handleSubmit}>\r\n                <div>\r\n                    <TextField\r\n                        inputRef={emailRef}\r\n                        id='email'\r\n                        type='email'\r\n                        variant='outlined'\r\n                        placeholder='user@example.com'\r\n                        label='Email'\r\n                        error={inputEmailStatus.error}\r\n                        helperText={inputEmailStatus.helperText}\r\n                        fullWidth />\r\n                    <TextField\r\n                        inputRef={passwordRef}\r\n                        id='password'\r\n                        type='password'\r\n                        variant='outlined'\r\n                        label='Password'\r\n                        error={inputPasswordStatus.error}\r\n                        helperText={inputPasswordStatus.helperText}\r\n                        fullWidth />\r\n                </div>\r\n                <div className={styles.smalltext}>Forgot password?</div>\r\n                <Button\r\n                    className={styles.submitButton}\r\n                    type='submit'\r\n                >Login</Button>\r\n            </form>\r\n            <div>\r\n                <Typography variant='subtitle1' className={styles.smalltext}>Don't have an account? <Link to='/register'><b>Sign Up</b></Link></Typography>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}