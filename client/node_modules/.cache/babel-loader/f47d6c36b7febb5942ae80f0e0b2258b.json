{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Jil Henry\\\\Documents\\\\Programming\\\\React\\\\acne_diagnosis\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { validEmail } from './Regex';\nimport Constants from './Constants';\n/*\r\n*Function to Handle Form Submission\r\n*PARAMETERS\r\n    values: an object containing form data to be validated\r\n    formType: integer code for type of form\r\n\r\n*OUTPUT\r\n    validationInfo: an object containing information about validation process\r\n*/\n\nexport function validateForm(values, formType) {\n  var canSubmit = true;\n  var validationInfo = {\n    errors: {},\n    helperTexts: {}\n  };\n  validationInfo.errors = formType === Constants.FORM_TYPE.register ? _objectSpread({}, Constants.REG_FORM_ERRORS) : _objectSpread({}, Constants.LOGIN_FORM_ERRORS);\n  validationInfo.helperTexts = formType === Constants.FORM_TYPE.register ? _objectSpread({}, Constants.REG_FORM_HELPER_TEXTS) : _objectSpread({}, Constants.LOGIN_FORM_HELPER_TEXTS);\n\n  switch (formType) {\n    case Constants.FORM_TYPE.register:\n      validateRegForm(values, validationInfo);\n      break;\n\n    case Constants.FORM_TYPE.login:\n      validateLoginForm(values, validationInfo);\n      break;\n\n    default:\n      console.log('Invalid Form Type. See Constants.js');\n  }\n} //end of function\n\nfunction validateRegForm(values, validationInfo) {\n  var firstName = values.firstname ? values.firstname : '';\n  var lastName = values.lastname ? values.lastname : '';\n  var email = values.email ? values.email : '';\n  var password = values.password ? values.password : '';\n  var confirmPassword = values.confirmPassword ? values.confirmPassword : '';\n  var isChecked = values.isChecked ? values.isChecked : false;\n\n  if (firstName === '') {\n    validationInfo.helperTexts.firstname = 'First Name is required';\n    validationInfo.errors.firstname = true;\n    canSubmit = false;\n  }\n\n  if (lastName === '') {\n    validationInfo.helperTexts.lastname = 'Last Name is required';\n    validationInfo.errors.lastname = true;\n    canSubmit = false;\n  }\n\n  if (email === '' || !validEmail.test(email)) {\n    validationInfo.helperTexts.email = 'Invalid Email';\n    validationInfo.errors.email = true;\n    canSubmit = false;\n  }\n\n  if (password === '' || password.length < 8) {\n    validationInfo.helperTexts.password = 'Password must be 8 or more characters';\n    validationInfo.errors.password = true;\n    canSubmit = false;\n  }\n\n  if (!(confirmPassword === password)) {\n    validationInfo.helperTexts.confirmPassword = 'Passwords doesn\\'t match';\n    validationInfo.errors.confirmPassword = true;\n    canSubmit = false;\n  }\n\n  if (!isChecked) {\n    validationInfo.helperTexts.isChecked = \"You must accept the Terms & Conditions\";\n    canSubmit = false;\n  }\n\n  validationInfo.errors.isChecked = isChecked;\n  validationInfo.canSubmit = canSubmit;\n  return validationInfo;\n} //end of function\n\n\nfunction validateLoginForm(values, validationInfo) {}","map":{"version":3,"sources":["C:/Users/Jil Henry/Documents/Programming/React/acne_diagnosis/client/src/utility/FormValidation.js"],"names":["validEmail","Constants","validateForm","values","formType","canSubmit","validationInfo","errors","helperTexts","FORM_TYPE","register","REG_FORM_ERRORS","LOGIN_FORM_ERRORS","REG_FORM_HELPER_TEXTS","LOGIN_FORM_HELPER_TEXTS","validateRegForm","login","validateLoginForm","console","log","firstName","firstname","lastName","lastname","email","password","confirmPassword","isChecked","test","length"],"mappings":"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","sourcesContent":["import { validEmail } from './Regex'\r\nimport Constants from './Constants'\r\n/*\r\n*Function to Handle Form Submission\r\n*PARAMETERS\r\n    values: an object containing form data to be validated\r\n    formType: integer code for type of form\r\n\r\n*OUTPUT\r\n    validationInfo: an object containing information about validation process\r\n*/\r\n\r\nexport function validateForm(values, formType) {\r\n    var canSubmit = true;\r\n    const validationInfo = {\r\n        errors: {},\r\n        helperTexts: {}\r\n    };\r\n    validationInfo.errors =\r\n        formType === Constants.FORM_TYPE.register ? { ...Constants.REG_FORM_ERRORS } : { ...Constants.LOGIN_FORM_ERRORS };\r\n    validationInfo.helperTexts =\r\n        formType === Constants.FORM_TYPE.register ? { ...Constants.REG_FORM_HELPER_TEXTS } : { ...Constants.LOGIN_FORM_HELPER_TEXTS };\r\n\r\n    switch (formType) {\r\n        case Constants.FORM_TYPE.register:\r\n            validateRegForm(values, validationInfo);\r\n            break;\r\n        case Constants.FORM_TYPE.login:\r\n            validateLoginForm(values, validationInfo);\r\n            break;\r\n        default:\r\n            console.log('Invalid Form Type. See Constants.js');\r\n    }\r\n\r\n}//end of function\r\n\r\nfunction validateRegForm(values, validationInfo) {\r\n    const firstName = values.firstname ? values.firstname : '';\r\n    const lastName = values.lastname ? values.lastname : '';\r\n    const email = values.email ? values.email : '';\r\n    const password = values.password ? values.password : '';\r\n    const confirmPassword = values.confirmPassword ? values.confirmPassword : '';\r\n    const isChecked = values.isChecked ? values.isChecked : false;\r\n\r\n    if (firstName === '') {\r\n        validationInfo.helperTexts.firstname = 'First Name is required';\r\n        validationInfo.errors.firstname = true;\r\n        canSubmit = false;\r\n    }\r\n    if (lastName === '') {\r\n        validationInfo.helperTexts.lastname = 'Last Name is required';\r\n        validationInfo.errors.lastname = true;\r\n        canSubmit = false;\r\n    }\r\n    if (email === '' || !validEmail.test(email)) {\r\n        validationInfo.helperTexts.email = 'Invalid Email';\r\n        validationInfo.errors.email = true;\r\n        canSubmit = false;\r\n    }\r\n    if (password === '' || password.length < 8) {\r\n        validationInfo.helperTexts.password = 'Password must be 8 or more characters';\r\n        validationInfo.errors.password = true;\r\n        canSubmit = false;\r\n    }\r\n    if (!(confirmPassword === password)) {\r\n        validationInfo.helperTexts.confirmPassword = 'Passwords doesn\\'t match';\r\n        validationInfo.errors.confirmPassword = true;\r\n        canSubmit = false;\r\n    }\r\n    if (!isChecked) {\r\n        validationInfo.helperTexts.isChecked = \"You must accept the Terms & Conditions\";\r\n        canSubmit = false;\r\n    }\r\n    validationInfo.errors.isChecked = isChecked;\r\n\r\n    validationInfo.canSubmit = canSubmit;\r\n    return validationInfo;\r\n}//end of function\r\n\r\nfunction validateLoginForm(values, validationInfo) {\r\n\r\n}"]},"metadata":{},"sourceType":"module"}