{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Jil Henry\\\\Documents\\\\Programming\\\\React\\\\acne_diagnosis\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jil Henry\\\\Documents\\\\Programming\\\\React\\\\acne_diagnosis\\\\client\\\\src\\\\components\\\\Register.js\";\nimport React, { useRef, useState } from 'react';\nimport { Container, Typography, TextField, Grid, Checkbox, InputAdornment, IconButton } from \"@mui/material\";\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styles from '../resources/FormStyles.module.css';\nimport { validateForm } from '../utility/FormValidation';\nimport Constants from \"../utility/Constants\";\nimport { makeRequest } from '../utility/ServerUtil';\n\nfunction Register() {\n  var TEXTFIELD_HEIGHT = Constants.TEXTFIELD_HEIGHT;\n  var navigate = useNavigate(); //Form Refs\n\n  var fNameRef = useRef();\n  var lNameRef = useRef();\n  var emailRef = useRef();\n  var passwordRef = useRef();\n  var cPasswordRef = useRef(); //Use States\n\n  var _useState = useState(Constants.REG_FORM_ERRORS),\n      _useState2 = _slicedToArray(_useState, 2),\n      errors = _useState2[0],\n      setErrors = _useState2[1];\n\n  var _useState3 = useState(Constants.REG_FORM_HELPER_TEXTS),\n      _useState4 = _slicedToArray(_useState3, 2),\n      helperTexts = _useState4[0],\n      setHelperTexts = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      checked = _useState6[0],\n      setChecked = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showPassword = _useState8[0],\n      setShowPassword = _useState8[1]; //Handle Showing Passwords\n\n\n  var handleClickShowPassword = function handleClickShowPassword() {\n    return setShowPassword(!showPassword);\n  }; //Handle Checkbox Clicks\n\n\n  var handleCheckbox = function handleCheckbox(event) {\n    setChecked(event.target.checked);\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    setErrors(Constants.FORM_ERRORS);\n    setHelperTexts(Constants.FORM_HELPER_TEXTS);\n    var firstName = fNameRef.current.value;\n    var lastName = lNameRef.current.value;\n    var email = emailRef.current.value;\n    var password = passwordRef.current.value;\n    var confirmPassword = cPasswordRef.current.value;\n    var formData = {\n      firstname: firstName,\n      lastname: lastName,\n      email: email,\n      password: password,\n      confirmPassword: confirmPassword,\n      isChecked: checked\n    };\n    var validationStatus = validateForm(formData, Constants.FORM_TYPE.register);\n    setErrors(validationStatus.errors);\n    setHelperTexts(validationStatus.helperTexts);\n    if (!validationStatus.errors.isChecked) alert(validationStatus.helperTexts.isChecked);\n\n    if (validationStatus.canSubmit) {\n      var data = {\n        firstname: firstName,\n        lastname: lastName,\n        email: email,\n        password: password\n      };\n      makeRequest(Constants.REGISTER_API, data, Constants.SERVER_CALL_TYPE.post).then(function (response) {\n        console.log(\"Server Response: \" + response);\n\n        if (response.status === Constants.STATUS_CODE_SUCCESS) {\n          console.log(response.data);\n\n          if (response.data.statusCode === Constants.STATUS_CODE_SUCCESS) {\n            console.log(\"Registraion Response Success\");\n            alert(response.data.message);\n            navigate(Constants.LOGIN_PAGE);\n          } else if (response.data.statusCode === Constants.STATUS_CODE_ERROR) {\n            console.log(\"Registration Response Error\");\n            alert(response.data.message);\n          }\n        } else {\n          console.log(\"Registration Response Error\");\n          alert(Constants.REG_FORM_ERROR_MESSAGE);\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"xs\",\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    className: styles.headertext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    className: styles.smalltext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Please fill to create a new account\")), /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    rowSpacing: 0,\n    className: styles.namerow,\n    columnSpacing: 0.5,\n    direction: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    sx: {\n      m: \"2rem\"\n    },\n    label: \"First Name\",\n    placeholder: \"Ann\",\n    variant: \"outlined\",\n    error: errors.firstname,\n    helperText: helperTexts.firstname,\n    inputRef: fNameRef,\n    InputProps: {\n      style: {\n        height: {\n          TEXTFIELD_HEIGHT: TEXTFIELD_HEIGHT\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"text\",\n    variant: \"outlined\",\n    placeholder: \"Harrison\",\n    label: \"Last Name\",\n    error: errors.lastname,\n    helperText: helperTexts.lastname,\n    inputRef: lNameRef,\n    InputProps: {\n      style: {\n        height: {\n          TEXTFIELD_HEIGHT: TEXTFIELD_HEIGHT\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"email\",\n    variant: \"outlined\",\n    placeholder: \"user@example.com\",\n    label: \"Email\",\n    fullWidth: true,\n    error: errors.email,\n    helperText: helperTexts.email,\n    inputRef: emailRef,\n    InputProps: {\n      style: {\n        height: {\n          TEXTFIELD_HEIGHT: TEXTFIELD_HEIGHT\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"password\",\n    variant: \"outlined\",\n    label: \"Password\",\n    fullWidth: true,\n    error: errors.password,\n    helperText: helperTexts.password,\n    inputRef: passwordRef,\n    InputProps: {\n      style: {\n        height: {\n          TEXTFIELD_HEIGHT: TEXTFIELD_HEIGHT\n        }\n      },\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: handleClickShowPassword //onMouseDown={handleMouseDownPassword}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 41\n        }\n      }, showPassword ? /*#__PURE__*/React.createElement(Visibility, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 61\n        }\n      }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 78\n        }\n      })))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"password\",\n    variant: \"outlined\",\n    label: \"Confirm Password\",\n    fullWidth: true,\n    error: errors.confirmPassword,\n    helperText: helperTexts.confirmPassword,\n    inputRef: cPasswordRef,\n    InputProps: {\n      style: {\n        height: {\n          TEXTFIELD_HEIGHT: TEXTFIELD_HEIGHT\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    sx: {\n      color: '#2139cd',\n      '&.Mui-checked': {\n        color: 'primary'\n      }\n    },\n    onChange: handleCheckbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }, \"I accept the \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 39\n    }\n  }, \"Terms of Use & Privacy Policy\"))), /*#__PURE__*/React.createElement(LoadingButton, {\n    className: styles.submitButton,\n    loading: loading,\n    variant: \"outlined\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }, \"Register\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    className: styles.smalltext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }, \"Already have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 103\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 116\n    }\n  }, \"Login\")))));\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/Jil Henry/Documents/Programming/React/acne_diagnosis/client/src/components/Register.js"],"names":["React","useRef","useState","Container","Typography","TextField","Grid","Checkbox","InputAdornment","IconButton","Visibility","VisibilityOff","Link","useNavigate","styles","validateForm","Constants","makeRequest","Register","TEXTFIELD_HEIGHT","navigate","fNameRef","lNameRef","emailRef","passwordRef","cPasswordRef","REG_FORM_ERRORS","errors","setErrors","REG_FORM_HELPER_TEXTS","helperTexts","setHelperTexts","checked","setChecked","showPassword","setShowPassword","handleClickShowPassword","handleCheckbox","event","target","handleSubmit","preventDefault","FORM_ERRORS","FORM_HELPER_TEXTS","firstName","current","value","lastName","email","password","confirmPassword","formData","firstname","lastname","isChecked","validationStatus","FORM_TYPE","register","alert","canSubmit","data","REGISTER_API","SERVER_CALL_TYPE","post","then","response","console","log","status","STATUS_CODE_SUCCESS","statusCode","message","LOGIN_PAGE","STATUS_CODE_ERROR","REG_FORM_ERROR_MESSAGE","container","heading","headertext","smalltext","namerow","m","style","height","endAdornment","row","color","submitButton","loading"],"mappings":"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","sourcesContent":["import React, { useRef, useState, } from 'react';\r\nimport { Container, Typography, TextField, Grid, Checkbox, InputAdornment, IconButton } from \"@mui/material\";\r\n\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport styles from '../resources/FormStyles.module.css';\r\nimport { validateForm } from '../utility/FormValidation';\r\nimport Constants from \"../utility/Constants\"\r\nimport { makeRequest } from '../utility/ServerUtil';\r\n\r\nfunction Register() {\r\n    const TEXTFIELD_HEIGHT = Constants.TEXTFIELD_HEIGHT;\r\n    const navigate = useNavigate();\r\n    //Form Refs\r\n    const fNameRef = useRef();\r\n    const lNameRef = useRef();\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const cPasswordRef = useRef();\r\n\r\n    //Use States\r\n    const [errors, setErrors] = useState(Constants.REG_FORM_ERRORS);\r\n    const [helperTexts, setHelperTexts] = useState(Constants.REG_FORM_HELPER_TEXTS);\r\n    const [checked, setChecked] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    //Handle Showing Passwords\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n\r\n    //Handle Checkbox Clicks\r\n    const handleCheckbox = (event) => {\r\n        setChecked(event.target.checked);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        setErrors(Constants.FORM_ERRORS);\r\n        setHelperTexts(Constants.FORM_HELPER_TEXTS);\r\n\r\n        const firstName = fNameRef.current.value;\r\n        const lastName = lNameRef.current.value;\r\n        const email = emailRef.current.value;\r\n        const password = passwordRef.current.value;\r\n        const confirmPassword = cPasswordRef.current.value;\r\n\r\n        const formData = {\r\n            firstname: firstName,\r\n            lastname: lastName,\r\n            email: email,\r\n            password: password,\r\n            confirmPassword: confirmPassword,\r\n            isChecked: checked,\r\n        }\r\n\r\n        const validationStatus = validateForm(formData, Constants.FORM_TYPE.register);\r\n\r\n        setErrors(validationStatus.errors);\r\n        setHelperTexts(validationStatus.helperTexts);\r\n\r\n        if (!validationStatus.errors.isChecked)\r\n            alert(validationStatus.helperTexts.isChecked);\r\n\r\n        if (validationStatus.canSubmit) {\r\n            const data = {\r\n                firstname: firstName,\r\n                lastname: lastName,\r\n                email: email,\r\n                password: password,\r\n            }\r\n            makeRequest(Constants.REGISTER_API, data, Constants.SERVER_CALL_TYPE.post)\r\n                .then((response) => {\r\n                    console.log(\"Server Response: \" + response);\r\n                    if (response.status === Constants.STATUS_CODE_SUCCESS) {\r\n                        console.log(response.data)\r\n                        if (response.data.statusCode === Constants.STATUS_CODE_SUCCESS) {\r\n                            console.log(\"Registraion Response Success\");\r\n                            alert(response.data.message);\r\n                            navigate(Constants.LOGIN_PAGE);\r\n                        }\r\n                        else if (response.data.statusCode === Constants.STATUS_CODE_ERROR) {\r\n                            console.log(\"Registration Response Error\");\r\n                            alert(response.data.message);\r\n                        }\r\n                    }\r\n                    else {\r\n                        console.log(\"Registration Response Error\");\r\n                        alert(Constants.REG_FORM_ERROR_MESSAGE);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth='xs' className={styles.container}>\r\n            <div className={styles.heading}>\r\n                <Typography variant='h5' className={styles.headertext}>Sign Up</Typography>\r\n                <Typography variant='subtitle1' className={styles.smalltext}>Please fill to create a new account</Typography>\r\n            </div>\r\n            <form autoComplete='off'\r\n                noValidate\r\n                onSubmit={handleSubmit}>\r\n                <Grid\r\n                    container\r\n                    rowSpacing={0}\r\n                    className={styles.namerow}\r\n                    columnSpacing={0.5}\r\n                    direction=\"row\"\r\n                    justifyContent=\"space-around\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            sx={{ m: \"2rem\" }}\r\n                            label='First Name'\r\n                            placeholder='Ann'\r\n                            variant='outlined'\r\n                            error={errors.firstname}\r\n                            helperText={helperTexts.firstname}\r\n                            inputRef={fNameRef}\r\n                            InputProps={{\r\n                                style: {\r\n                                    height: { TEXTFIELD_HEIGHT },\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            type='text'\r\n                            variant='outlined'\r\n                            placeholder='Harrison'\r\n                            label='Last Name'\r\n                            error={errors.lastname}\r\n                            helperText={helperTexts.lastname}\r\n                            inputRef={lNameRef}\r\n                            InputProps={{\r\n                                style: {\r\n                                    height: { TEXTFIELD_HEIGHT },\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            type='email'\r\n                            variant='outlined'\r\n                            placeholder='user@example.com'\r\n                            label='Email'\r\n                            fullWidth\r\n                            error={errors.email}\r\n                            helperText={helperTexts.email}\r\n                            inputRef={emailRef}\r\n                            InputProps={{\r\n                                style: {\r\n                                    height: { TEXTFIELD_HEIGHT },\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            type='password'\r\n                            variant='outlined'\r\n                            label='Password'\r\n                            fullWidth\r\n                            error={errors.password}\r\n                            helperText={helperTexts.password}\r\n                            inputRef={passwordRef}\r\n                            InputProps={{\r\n                                style: {\r\n                                    height: { TEXTFIELD_HEIGHT },\r\n                                },\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                        //onMouseDown={handleMouseDownPassword}\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            type='password'\r\n                            variant='outlined'\r\n                            label='Confirm Password'\r\n                            fullWidth\r\n                            error={errors.confirmPassword}\r\n                            helperText={helperTexts.confirmPassword}\r\n                            inputRef={cPasswordRef}\r\n                            InputProps={{\r\n                                style: {\r\n                                    height: { TEXTFIELD_HEIGHT },\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <div className={styles.row}>\r\n                    <Checkbox\r\n                        sx={{\r\n                            color: '#2139cd',\r\n                            '&.Mui-checked': {\r\n                                color: 'primary',\r\n                            },\r\n                        }}\r\n                        onChange={handleCheckbox}\r\n                    />\r\n                    <div>I accept the <b>Terms of Use &amp; Privacy Policy</b></div>\r\n                </div>\r\n                <LoadingButton\r\n                    className={styles.submitButton}\r\n                    loading={loading}\r\n                    variant='outlined'\r\n                    type='submit'\r\n                >Register</LoadingButton>\r\n            </form>\r\n            <div>\r\n                <Typography variant='subtitle1' className={styles.smalltext}>Already have an account? <Link to='/'><b>Login</b></Link></Typography>\r\n            </div>\r\n        </Container>\r\n\r\n    )\r\n}\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}