{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Jil Henry\\\\Documents\\\\Programming\\\\Final Year Project\\\\acne_diagnosis\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jil Henry\\\\Documents\\\\Programming\\\\Final Year Project\\\\acne_diagnosis\\\\client\\\\src\\\\components\\\\Main.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Typography, LinearProgress } from '@mui/material';\nimport { useDropzone } from 'react-dropzone';\nimport { useNavigate, Navigate } from 'react-router-dom';\nimport styles from '../resources/Main.module.css';\nimport Layout from './Layout';\nimport { Container } from '../resources/styledComponents';\nimport Constants from '../utility/Constants';\nimport { makeRequest, getFormData } from '../utility/ServerUtil';\n\nfunction Main() {\n  var navigate = useNavigate();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState('Uploading File'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      statusMsg = _useState4[0],\n      setStatusMsg = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedFiles = _useState6[0],\n      setSelectedFiles = _useState6[1];\n\n  var userName = \"\"; //const [files, setFiles] = useState([]);\n  //Check if user has logged in else redirect to login\n\n  if (Constants.LOGIN_INFO.loggedIN) {\n    console.log(\"User Logged In\");\n    userName = Constants.LOGIN_INFO.userData.first_name + \" \" + Constants.LOGIN_INFO.userData.last_name;\n  } else {\n    console.log(\"User is not authenticated\");\n    return /*#__PURE__*/React.createElement(Navigate, {\n      to: Constants.LOGIN_PAGE,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }\n    });\n  }\n\n  var sleep = function sleep(delay) {\n    return new Promise(function (res) {\n      return setTimeout(res, delay);\n    });\n  }; //Initializing DropZone\n\n\n  var _useDropzone = useDropzone({\n    accept: [\"image/png\", \"image/jpeg\"],\n    onDrop: function onDrop(acceptedFiles, fileRejections) {\n      if (acceptedFiles) {\n        // acceptedFiles.map(file =>\n        //     Object.assign(file, { preview: URL.createObjectURL(file) })\n        // )\n        var filesObject = Object.assign({}, acceptedFiles);\n        console.log(\"Object Files:\", filesObject);\n        setSelectedFiles(filesObject);\n      } else if (fileRejections) {\n        alert(\"Uploaded Invalid Files\");\n      }\n    }\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps,\n      isDragAccept = _useDropzone.isDragAccept,\n      isDragReject = _useDropzone.isDragReject; //Use Effect to Listen for Upload of Files\n\n\n  useEffect(function () {\n    if (!selectedFiles || selectedFiles.length < 1) {\n      console.log(\"UseEffect(): No files\"); //alert(\"Please Upload .PNG or .JPG Images\");\n\n      return;\n    }\n\n    console.log(\"UseEffect(): Selected Files Changed\");\n    uploadSelectedFiles(selectedFiles);\n  }, [selectedFiles]);\n\n  var uploadSelectedFiles = function uploadSelectedFiles(files) {\n    // axios({\n    //     method: \"post\",\n    //     url: Constants.MODEL_PREDICT_API,\n    //     data: files,\n    // })\n    setLoading(true);\n    var formData = getFormData(files);\n    console.log(\"Uploading Files\");\n    makeRequest(Constants.MODEL_PREDICT_API, formData, Constants.SERVER_CALL_TYPE.post).then(function (response) {\n      var resData = response.data;\n      console.log(\"Model Response: \", resData);\n\n      if (resData.statusCode === Constants.STATUS_CODE_SUCCESS) {\n        setStatusMsg(\"Predicting\");\n        sleep(2000).then;\n        navigate(Constants.RESULT_PAGE, {\n          state: {\n            resultData: resData.modelResponse,\n            userName: userName\n          }\n        });\n      } else {\n        setLoading(false);\n\n        if (resData.statusCode === Constants.STATUS_CODE_ERROR) {\n          alert(resData.modelResponse);\n        } else {\n          alert(Constants.DEFAULT_ERROR_MESSAGE);\n        }\n      }\n    }).catch(function (_) {\n      setLoading(false);\n      alert(Constants.DEFAULT_ERROR_MESSAGE);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    isHome: true,\n    userName: userName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"modal-loading\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.maintext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 26\n    }\n  }, statusMsg)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(LinearProgress, {\n    variant: \"indeterminate\",\n    color: \"secondary\",\n    sx: {\n      height: 10,\n      borderRadius: 1,\n      backgroundColor: '#243456'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, \"Upload Images\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, \"For a better prediction please upload multiple images\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['file-upload-container'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Container, Object.assign({}, getRootProps({\n    isDragAccept: isDragAccept,\n    isDragReject: isDragReject\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['file-upload-caption'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, isDragReject ? \"Invalid File Format. PNG or JPG Images Only\" : \"Drag and Drop Images or click to browse device\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.footer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }, \"Only .png and .jpg images are allowed\"))));\n}\n\nexport default Main;","map":{"version":3,"sources":["C:/Users/Jil Henry/Documents/Programming/Final Year Project/acne_diagnosis/client/src/components/Main.js"],"names":["React","useState","useEffect","Typography","LinearProgress","useDropzone","useNavigate","Navigate","styles","Layout","Container","Constants","makeRequest","getFormData","Main","navigate","loading","setLoading","statusMsg","setStatusMsg","selectedFiles","setSelectedFiles","userName","LOGIN_INFO","loggedIN","console","log","userData","first_name","last_name","LOGIN_PAGE","sleep","delay","Promise","res","setTimeout","accept","onDrop","acceptedFiles","fileRejections","filesObject","Object","assign","alert","getRootProps","getInputProps","isDragAccept","isDragReject","length","uploadSelectedFiles","files","formData","MODEL_PREDICT_API","SERVER_CALL_TYPE","post","then","response","resData","data","statusCode","STATUS_CODE_SUCCESS","RESULT_PAGE","state","resultData","modelResponse","STATUS_CODE_ERROR","DEFAULT_ERROR_MESSAGE","catch","_","maintext","height","borderRadius","backgroundColor","modal","heading","footer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Typography, LinearProgress } from '@mui/material';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { useNavigate, Navigate } from 'react-router-dom';\r\nimport styles from '../resources/Main.module.css';\r\nimport Layout from './Layout';\r\nimport { Container } from '../resources/styledComponents';\r\nimport Constants from '../utility/Constants';\r\nimport { makeRequest, getFormData } from '../utility/ServerUtil'\r\nfunction Main() {\r\n    const navigate = useNavigate();\r\n    const [loading, setLoading] = useState(false);\r\n    const [statusMsg, setStatusMsg] = useState('Uploading File');\r\n    const [selectedFiles, setSelectedFiles] = useState();\r\n    let userName = \"\";\r\n    //const [files, setFiles] = useState([]);\r\n    //Check if user has logged in else redirect to login\r\n    if (Constants.LOGIN_INFO.loggedIN) {\r\n        console.log(\"User Logged In\");\r\n        userName = Constants.LOGIN_INFO.userData.first_name + \" \" + Constants.LOGIN_INFO.userData.last_name;\r\n    } else {\r\n        console.log(\"User is not authenticated\");\r\n        return <Navigate to={Constants.LOGIN_PAGE} />\r\n    }\r\n\r\n    const sleep = (delay) => {\r\n        return new Promise( res => setTimeout(res, delay) );\r\n    }\r\n\r\n    //Initializing DropZone\r\n    const { getRootProps, getInputProps, isDragAccept, isDragReject, }\r\n        = useDropzone({\r\n            accept: [\"image/png\", \"image/jpeg\"],\r\n            onDrop: (acceptedFiles, fileRejections) => {\r\n                if (acceptedFiles) {\r\n                    // acceptedFiles.map(file =>\r\n                    //     Object.assign(file, { preview: URL.createObjectURL(file) })\r\n                    // )\r\n                    const filesObject = Object.assign({}, acceptedFiles);\r\n                    console.log(\"Object Files:\", filesObject);\r\n                    setSelectedFiles(filesObject);\r\n                }\r\n                else if (fileRejections) {\r\n                    alert(\"Uploaded Invalid Files\");\r\n                }\r\n            }\r\n        })\r\n    //Use Effect to Listen for Upload of Files\r\n    useEffect(() => {\r\n        if (!selectedFiles || selectedFiles.length < 1) {\r\n            console.log(\"UseEffect(): No files\")\r\n            //alert(\"Please Upload .PNG or .JPG Images\");\r\n            return;\r\n        }\r\n        console.log(\"UseEffect(): Selected Files Changed\");\r\n        uploadSelectedFiles(selectedFiles);\r\n    }, [selectedFiles]);\r\n\r\n    const uploadSelectedFiles = (files) => {\r\n        // axios({\r\n        //     method: \"post\",\r\n        //     url: Constants.MODEL_PREDICT_API,\r\n        //     data: files,\r\n        // })\r\n        setLoading(true);\r\n        const formData = getFormData(files);\r\n        console.log(\"Uploading Files\");\r\n        makeRequest(Constants.MODEL_PREDICT_API, formData, Constants.SERVER_CALL_TYPE.post)\r\n            .then(response => {\r\n                const resData = response.data;\r\n                console.log(\"Model Response: \", resData);\r\n                if (resData.statusCode === Constants.STATUS_CODE_SUCCESS) {\r\n                    setStatusMsg(\"Predicting\")\r\n                    sleep(2000).then\r\n                    navigate(Constants.RESULT_PAGE,\r\n                        {\r\n                            state: {\r\n                                resultData: resData.modelResponse,\r\n                                userName : userName,\r\n                            }\r\n                        });\r\n                }\r\n                else {\r\n                    setLoading(false);\r\n                    if (resData.statusCode === Constants.STATUS_CODE_ERROR) {\r\n                        alert(resData.modelResponse);\r\n                    }\r\n                    else {\r\n                        alert(Constants.DEFAULT_ERROR_MESSAGE);\r\n                    }\r\n                }\r\n            })\r\n            .catch(_ => {\r\n                setLoading(false);\r\n                alert(Constants.DEFAULT_ERROR_MESSAGE);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Layout isHome={true} userName={userName}>{\r\n            loading ?\r\n                <div className={styles[\"modal-loading\"]}>\r\n                    <div><p className={styles.maintext}>{statusMsg}</p></div>\r\n                    <div>\r\n                        <LinearProgress\r\n                            variant='indeterminate'\r\n                            color='secondary'\r\n                            sx={{\r\n                                height: 10,\r\n                                borderRadius: 1,\r\n                                backgroundColor: '#243456'\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div> :\r\n                <div className={styles.modal}>\r\n                    <div className={styles.heading}>\r\n                        <Typography variant='h6'>Upload Images</Typography>\r\n                        <Typography variant='subtitle2'>\r\n                            For a better prediction please upload multiple images\r\n                        </Typography>\r\n                    </div>\r\n                    <div className={styles['file-upload-container']}>\r\n                        <Container {...getRootProps({ isDragAccept, isDragReject })}>\r\n                            <input {...getInputProps()} />\r\n                            <div className={styles['file-upload-caption']}>\r\n                                <Typography variant='p'>\r\n                                    {isDragReject ? \"Invalid File Format. PNG or JPG Images Only\" : \"Drag and Drop Images or click to browse device\"}\r\n                                </Typography>\r\n                            </div>\r\n                        </Container>\r\n                    </div>\r\n                    <div className={styles.footer}>\r\n                        <Typography variant='subtitle2'>\r\n                            Only .png and .jpg images are allowed\r\n                        </Typography>\r\n                    </div>\r\n                </div>}\r\n        </Layout>\r\n    );\r\n}\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}