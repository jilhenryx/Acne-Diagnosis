{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Jil Henry\\\\Documents\\\\Programming\\\\React\\\\acne_diagnosis\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jil Henry\\\\Documents\\\\Programming\\\\React\\\\acne_diagnosis\\\\client\\\\src\\\\components\\\\Main.js\";\nimport React, { useState } from 'react';\nimport { Typography, LinearProgress } from '@mui/material';\nimport { useDropzone } from 'react-dropzone';\nimport { useNavigate, useLocation, Navigate } from 'react-router-dom';\nimport styles from '../resources/Main.module.css';\nimport Layout from './Layout';\nimport { Container } from '../resources/styledComponents';\nimport Constants from '../utility/Constants';\nimport { makeRequest } from '../utility/ServerUtil';\n\nfunction Main() {\n  var navigate = useNavigate();\n  var location = useLocation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState('Uploading File'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      statusMsg = _useState4[0],\n      setStatusMsg = _useState4[1];\n\n  var userName = \"\"; //const [files, setFiles] = useState([]);\n  //Check if user has logged in else redirect to login\n\n  if (location.state && location.state.shouldLogin) {\n    console.log(\"Loc State: \", location.state);\n    userName = location.state.userInfo.first_name + \" \" + location.state.userInfo.last_name;\n  } else {\n    console.log(\"User is not authenticated\");\n    return /*#__PURE__*/React.createElement(Navigate, {\n      to: Constants.LOGIN_PAGE,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }\n    });\n  } //Initializing DropZone\n\n\n  var _useDropzone = useDropzone({\n    accept: [\"image/png\", \"image/jpeg\"],\n    onDrop: function onDrop(acceptedFiles, fileRejections) {\n      if (acceptedFiles) {\n        acceptedFiles.map(function (file) {\n          return Object.assign(file, {\n            preview: URL.createObjectURL(file)\n          });\n        });\n        console.log(\"Acccepted Files: \", acceptedFiles);\n        uploadFiles(acceptedFiles);\n      } else if (fileRejections) {\n        alert(\"Uploaded Invalid Files\");\n      }\n    }\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps,\n      isDragAccept = _useDropzone.isDragAccept,\n      isDragReject = _useDropzone.isDragReject;\n\n  var uploadFiles = function uploadFiles(files) {\n    if (files.length < 1) {\n      alert(\"Please Upload .PNG or .JPG Images\");\n      return;\n    }\n\n    console.log(\"Sending: \", files);\n    setLoading(true);\n    var formData = new FormData();\n    formData.append(\"files\", files);\n    makeRequest(Constants.MODEL_PREDICT_API, formData, Constants.SERVER_CALL_TYPE.post).then(function (response) {\n      console.log(\"Model Response: \", response);\n    }).catch;\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    isHome: true,\n    userName: userName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles[\"modal-loading\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.maintext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 26\n    }\n  }, statusMsg)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(LinearProgress, {\n    variant: \"indeterminate\",\n    color: \"secondary\",\n    sx: {\n      height: 10,\n      borderRadius: 1,\n      backgroundColor: '#243456'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, \"Upload Images\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, \"For a better prediction please upload multiple images\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['file-upload-container'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Container, Object.assign({}, getRootProps({\n    isDragAccept: isDragAccept,\n    isDragReject: isDragReject\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['file-upload-caption'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 33\n    }\n  }, isDragReject ? \"Invalid File Format. PNG or JPG Images Only\" : \"Drag and Drop Images or click to browse device\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.footer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, \"Only .png and .jpg images are allowed\"))));\n}\n\nexport default Main;","map":{"version":3,"sources":["C:/Users/Jil Henry/Documents/Programming/React/acne_diagnosis/client/src/components/Main.js"],"names":["React","useState","Typography","LinearProgress","useDropzone","useNavigate","useLocation","Navigate","styles","Layout","Container","Constants","makeRequest","Main","navigate","location","loading","setLoading","statusMsg","setStatusMsg","userName","state","shouldLogin","console","log","userInfo","first_name","last_name","LOGIN_PAGE","accept","onDrop","acceptedFiles","fileRejections","map","file","Object","assign","preview","URL","createObjectURL","uploadFiles","alert","getRootProps","getInputProps","isDragAccept","isDragReject","files","length","formData","FormData","append","MODEL_PREDICT_API","SERVER_CALL_TYPE","post","then","response","catch","maintext","height","borderRadius","backgroundColor","modal","heading","footer"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Typography, LinearProgress } from '@mui/material';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { useNavigate, useLocation, Navigate } from 'react-router-dom';\r\nimport styles from '../resources/Main.module.css';\r\nimport Layout from './Layout';\r\nimport { Container } from '../resources/styledComponents';\r\nimport Constants from '../utility/Constants';\r\nimport { makeRequest } from '../utility/ServerUtil'\r\nfunction Main() {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [loading, setLoading] = useState(false);\r\n    const [statusMsg, setStatusMsg] = useState('Uploading File');\r\n    let userName = \"\";\r\n    //const [files, setFiles] = useState([]);\r\n    //Check if user has logged in else redirect to login\r\n    if (location.state && location.state.shouldLogin) {\r\n        console.log(\"Loc State: \", location.state);\r\n        userName = location.state.userInfo.first_name + \" \" + location.state.userInfo.last_name;\r\n    } else {\r\n        console.log(\"User is not authenticated\");\r\n        return <Navigate to={Constants.LOGIN_PAGE} />\r\n    }\r\n\r\n    //Initializing DropZone\r\n    const { getRootProps, getInputProps, isDragAccept, isDragReject, }\r\n        = useDropzone({\r\n            accept: [\"image/png\", \"image/jpeg\"],\r\n            onDrop: (acceptedFiles, fileRejections) => {\r\n                if (acceptedFiles) {\r\n                    acceptedFiles.map(file =>\r\n                        Object.assign(file, { preview: URL.createObjectURL(file) })\r\n                    )\r\n                    console.log(\"Acccepted Files: \", acceptedFiles);\r\n                    uploadFiles(acceptedFiles);\r\n                }\r\n                else if (fileRejections) {\r\n                    alert(\"Uploaded Invalid Files\");\r\n                }\r\n            }\r\n        })\r\n\r\n    const uploadFiles = (files) => {\r\n        if (files.length < 1) {\r\n            alert(\"Please Upload .PNG or .JPG Images\");\r\n            return;\r\n        }\r\n        console.log(\"Sending: \", files);\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        formData.append(\"files\", files);\r\n\r\n        makeRequest(\r\n            Constants.MODEL_PREDICT_API,\r\n            formData,\r\n            Constants.SERVER_CALL_TYPE.post\r\n        ).then(response => {\r\n            console.log(\"Model Response: \", response);\r\n        }).catch\r\n\r\n    }\r\n\r\n    return (\r\n        <Layout isHome={true} userName={userName}>{\r\n            loading ?\r\n                <div className={styles[\"modal-loading\"]}>\r\n                    <div><p className={styles.maintext}>{statusMsg}</p></div>\r\n                    <div>\r\n                        <LinearProgress\r\n                            variant='indeterminate'\r\n                            color='secondary'\r\n                            sx={{\r\n                                height: 10,\r\n                                borderRadius: 1,\r\n                                backgroundColor: '#243456'\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div> :\r\n                <div className={styles.modal}>\r\n                    <div className={styles.heading}>\r\n                        <Typography variant='h6'>Upload Images</Typography>\r\n                        <Typography variant='subtitle2'>\r\n                            For a better prediction please upload multiple images\r\n                        </Typography>\r\n                    </div>\r\n                    <div className={styles['file-upload-container']}>\r\n                        <Container {...getRootProps({ isDragAccept, isDragReject })}>\r\n                            <input {...getInputProps()} />\r\n                            <div className={styles['file-upload-caption']}>\r\n                                <Typography variant='p'>\r\n                                    {isDragReject ? \"Invalid File Format. PNG or JPG Images Only\" : \"Drag and Drop Images or click to browse device\"}\r\n                                </Typography>\r\n                            </div>\r\n                        </Container>\r\n                    </div>\r\n                    <div className={styles.footer}>\r\n                        <Typography variant='subtitle2'>\r\n                            Only .png and .jpg images are allowed\r\n                        </Typography>\r\n                    </div>\r\n                </div>}\r\n        </Layout>\r\n    );\r\n}\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}